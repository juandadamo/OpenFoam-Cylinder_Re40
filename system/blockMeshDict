/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
// Variables coordinates

Diam  1.0;

Dominio_Lx1  -5.0;
Dominio_Lx2  15.0;
Dominio_Ly1  6.0;
Dominio_Ly2  -6.0;
Dominio_Lz1  0.5;
Dominio_Lz2  -0.5;
ang1	20;

Dcorona	#calc "2.0*$Diam";	    

Radio		#calc "$Diam/2";
Radio_n	#calc "-$Diam/2";
Diam1		#calc "$Diam";	
Diam2		#calc "-$Diam";
Dcorona1	#calc "$Dcorona";
Dcorona2	#calc "-$Dcorona";
Lcorona1	#calc "$Dcorona* pow(2,0.5)/2";
Lcorona2	#calc "-$Dcorona* pow(2,0.5)/2";
LDiam1		#calc "$Radio* pow(2,0.5)/2";
LDiam2		#calc "-$Radio* pow(2,0.5)/2";

rad_ang1	#calc "degToRad($ang1)";
arc1_x		#calc "$Radio*cos($rad_ang1)";
arc1_y		#calc "$Radio*sin($rad_ang1)";
arc1_xn	#calc "-$Radio*cos($rad_ang1)";
arc1_yn	#calc "-$Radio*sin($rad_ang1)";
arc2_x		#calc "$Dcorona*cos($rad_ang1)";
arc2_y		#calc "sin($rad_ang1)*$Dcorona";
arc2_xn	#calc "-cos($rad_ang1)*$Dcorona";
arc2_yn	#calc "-sin($rad_ang1)*$Dcorona";

n_cylinderx 	#calc "std::floor( 25 )";
n_cylindery 	#calc "std::floor( 25 )";
n_wakex	#calc "std::floor( 90 )";
n_librey	#calc "std::floor( 30 )";
n_inflowx	#calc "std::floor( 30 )";



vertices
(
    //back up
    ($Radio 0 $Dominio_Lz2)                  		//0
    ($Dcorona 0 $Dominio_Lz2)                    	//1 
    ($Dominio_Lx2 0 $Dominio_Lz2)                   	//2   
    ($Dominio_Lx2 $Lcorona1 $Dominio_Lz2)            	//3 
    ($Lcorona1 $Lcorona1 $Dominio_Lz2)      		//4
    ($LDiam1 $LDiam1 $Dominio_Lz2)      		//5
    ($Dominio_Lx2 $Dominio_Ly1 $Dominio_Lz2)		//6  
    ($Lcorona1 $Dominio_Ly1 $Dominio_Lz2)           	//7
    (0 $Dominio_Ly1 $Dominio_Lz2)                    	//8 
    (0 $Dcorona1 $Dominio_Lz2)                    	//9
    (0 $Radio $Dominio_Lz2)              	    	//10
    ($Radio_n 0 $Dominio_Lz2)              	   	//11
    ($Dcorona2 0 $Dominio_Lz2)                   	//12 
    ($Dominio_Lx1 0 $Dominio_Lz2)                   	//13
    ($Dominio_Lx1 $Lcorona1 $Dominio_Lz2)            	//14
    ($Lcorona2 $Lcorona1 $Dominio_Lz2)   	  	//15
    ($LDiam2 $LDiam1 $Dominio_Lz2)     		//16
    ($Dominio_Lx1 $Dominio_Ly1 $Dominio_Lz2)          //17
    ($Lcorona2 $Dominio_Ly1 $Dominio_Lz2)            	//18
    
    //front up
    ($Radio 0 $Dominio_Lz1)                   	//19
    ($Dcorona1 0 $Dominio_Lz1)                     	//20
    ($Dominio_Lx2 0 $Dominio_Lz1)                    	//21
    ($Dominio_Lx2 $Lcorona1 $Dominio_Lz1)            	//22
    ($Lcorona1 $Lcorona1 $Dominio_Lz1)     	  	//23
    ($LDiam1 $LDiam1 $Dominio_Lz1)       		//24
    ($Dominio_Lx2 $Dominio_Ly1 $Dominio_Lz1)         	//25
    ($Lcorona1 $Dominio_Ly1 $Dominio_Lz1)            	//26
    (0 $Dominio_Ly1 $Dominio_Lz1)                    	//27
    (0 $Dcorona1 $Dominio_Lz1)                     	//28 
    (0 $Radio $Dominio_Lz1)                   	//29  
    ($Radio_n 0 $Dominio_Lz1)      	            	//30
    ($Dcorona2 0 $Dominio_Lz1)                    	//31  
    ($Dominio_Lx1 0 $Dominio_Lz1)                    	//32
    ($Dominio_Lx1 $Lcorona1 $Dominio_Lz1)            	//33  
    ($Lcorona2 $Lcorona1 $Dominio_Lz1)   	   	//34  
    ($LDiam2 $LDiam1 $Dominio_Lz1)      		//35 
    ($Dominio_Lx1 $Dominio_Ly1 $Dominio_Lz1)          //36
    ($Lcorona2 $Dominio_Ly1 $Dominio_Lz1)            	//37  
    
    //back down
    ($Dominio_Lx2 $Lcorona2 $Dominio_Lz2)            	//38
    ($Lcorona1 $Lcorona2 $Dominio_Lz2)   	   	//39
    ($LDiam1 $LDiam2 $Dominio_Lz2)      		//40
    ($Dominio_Lx2 $Dominio_Ly2 $Dominio_Lz2)          //41 
    ($Lcorona1 $Dominio_Ly2 $Dominio_Lz2)           	//42
    (0 $Dominio_Ly2 $Dominio_Lz2)			//43
    (0 $Dcorona2 $Dominio_Lz2)                    	//44
    (0 $Radio_n $Dominio_Lz2)      	            	//45
    ($Dominio_Lx1 $Lcorona2 $Dominio_Lz2)            	//46
    ($Lcorona2 $Lcorona2 $Dominio_Lz2)	     	//47
    ($LDiam2 $LDiam2 $Dominio_Lz2)     		//48
    ($Dominio_Lx1 $Dominio_Ly2 $Dominio_Lz2)          //49
    ($Lcorona2 $Dominio_Ly2 $Dominio_Lz2)            	//50
    
    //front down
    ($Dominio_Lx2 $Lcorona2 $Dominio_Lz1)           	//51
    ($Lcorona1 $Lcorona2 $Dominio_Lz1)	      	//52
    ($LDiam1 $LDiam2 $Dominio_Lz1)       		//53
    ($Dominio_Lx2 $Dominio_Ly2 $Dominio_Lz1)          //54 
    ($Lcorona1 $Dominio_Ly2 $Dominio_Lz1)           	//55
    (0 $Dominio_Ly2 $Dominio_Lz1)                     //56
    (0 $Dcorona2 $Dominio_Lz1)                     	//57
    (0 $Radio_n $Dominio_Lz1)                   	//58
    ($Dominio_Lx1 $Lcorona2 $Dominio_Lz1)            	//59
    ($Lcorona2 $Lcorona2 $Dominio_Lz1)   	   	//60
    ($LDiam2 $LDiam2 $Dominio_Lz1)      		//61
    ($Dominio_Lx1 $Dominio_Ly2 $Dominio_Lz1)          //62
    ($Lcorona2 $Dominio_Ly2 $Dominio_Lz1)            	//63
   
);

blocks
(//up
    hex (5 4 9 10 24 23 28 29) ($n_cylinderx $n_cylindery 1) simpleGrading (2 1 1)    	//0
    hex (0 1 4 5 19 20 23 24) ($n_cylinderx $n_cylindery 1) simpleGrading (2 1 1)         	//1
    hex (1 2 3 4 20 21 22 23) ($n_wakex $n_cylindery 1) simpleGrading (6 1 1)         	//2
    hex (4 3 6 7 23 22 25 26) ($n_wakex $n_librey 1) simpleGrading (6 7 1)         	//3 
    hex (9 4 7 8 28 23 26 27) ($n_cylindery $n_librey 1) simpleGrading (1 7 1)         	//4
    hex (15 16 10 9 34 35 29 28) ($n_cylinderx $n_cylindery 1) simpleGrading (0.5 1 1)    	//5
    hex (12 11 16 15 31 30 35 34) ($n_cylinderx $n_cylindery 1) simpleGrading (0.5 1 1)   	//6	
    hex (13 12 15 14 32 31 34 33) ($n_inflowx $n_cylindery 1) simpleGrading (0.15 1 1)	//7
    hex (14 15 18 17 33 34 37 36) ($n_inflowx $n_librey 1) simpleGrading (0.15 7 1)   	//8
    hex (15 9 8 18 34 28 27 37) ($n_cylindery $n_librey 1) simpleGrading (1 7 1)       	//9
    
    //down
    hex (40 45 44 39 53 58 57 52) ($n_cylindery $n_cylinderx 1) simpleGrading (1 2 1)      	//10 
    hex (0 40 39 1 19 53 52 20) ($n_cylindery $n_cylinderx 1) simpleGrading (1 2 1)         //11  
    hex (1 39 38 2 20 52 51 21) ($n_cylindery $n_wakex 1) simpleGrading (1 6 1)		//12 
    hex (39 42 41 38 52 55 54 51) ($n_librey $n_wakex 1) simpleGrading (7 6 1)	      	//13   
    hex (44 43 42 39 57 56 55 52) ($n_librey $n_cylindery 1) simpleGrading (7 1 1)	       //14 
    hex (47 44 45 48 60 57 58 61) ($n_cylindery $n_cylinderx 1) simpleGrading (1 0.5 1)     //15 
    hex (12 47 48 11 31 60 61 30) ($n_cylindery $n_cylinderx 1) simpleGrading (1 0.5 1)     //16 
    hex (13 46 47 12 32 59 60 31) ($n_cylindery $n_inflowx 1) simpleGrading (1 0.15 1)  	//17  
    hex (46 49 50 47 59 62 63 60) ($n_librey $n_inflowx 1) simpleGrading (7 0.15 1)  	//18  
    hex (47 50 43 44 60 63 56 57) ($n_librey $n_cylindery 1) simpleGrading (7 1 1)       //19   
);
edges
(
    //up
    arc 0 5 ($arc1_x $arc1_y $Dominio_Lz2)
    arc 5 10 ($arc1_y $arc1_x $Dominio_Lz2)
    arc 19 24 ($arc1_x $arc1_y $Dominio_Lz1)
    arc 24 29 ($arc1_y $arc1_x $Dominio_Lz1)
    arc 11 16 ($arc1_xn $arc1_y $Dominio_Lz2)
    arc 16 10 ($arc1_yn $arc1_x $Dominio_Lz2)
    arc 30 35 ($arc1_xn $arc1_y $Dominio_Lz1)
    arc 35 29 ($arc1_yn $arc1_x $Dominio_Lz1)

    arc 15 9 ($arc2_yn $arc2_x $Dominio_Lz2)
    arc 12 15 ($arc2_xn $arc2_y $Dominio_Lz2)
    arc 1 4 ($arc2_x $arc2_y $Dominio_Lz2)
    arc 4 9 ($arc2_y $arc2_x $Dominio_Lz2)
    arc 34 28 ($arc2_yn $arc2_x $Dominio_Lz1)
    arc 23 28 ($arc2_y $arc2_x $Dominio_Lz1)
    arc 20 23 ($arc2_x $arc2_y $Dominio_Lz1)
    arc 31 34 ($arc2_xn $arc2_y $Dominio_Lz1)

    //down
    arc 0 40 ($arc1_x $arc1_yn $Dominio_Lz2)
    arc 40 45 ($arc1_y $arc1_xn $Dominio_Lz2)
    arc 19 53 ($arc1_x $arc1_yn $Dominio_Lz1)
    arc 53 58 ($arc1_y $arc1_xn $Dominio_Lz1)
    arc 11 48 ($arc1_xn $arc1_yn $Dominio_Lz2)
    arc 48 45 ($arc1_yn $arc1_xn $Dominio_Lz2)
    arc 30 61 ($arc1_xn $arc1_yn $Dominio_Lz1)
    arc 61 58 ($arc1_yn $arc1_xn $Dominio_Lz1)

    arc 1 39  ($arc2_x $arc2_yn $Dominio_Lz2)
    arc 39 44 ($arc2_y $arc2_xn $Dominio_Lz2)
    arc 20 52 ($arc2_x $arc2_yn $Dominio_Lz1)
    arc 52 57 ($arc2_y $arc2_xn $Dominio_Lz1) 
    arc 47 44 ($arc2_yn $arc2_xn $Dominio_Lz2)
    arc 12 47 ($arc2_xn $arc2_yn $Dominio_Lz2)
    arc 31 60 ($arc2_xn $arc2_yn $Dominio_Lz1)
    arc 60 57 ($arc2_yn $arc2_xn $Dominio_Lz1)  
);

boundary
(
    
    outlet
    {
		type patch;
		faces
		(
		    //up
		    (2 3 22 21)
		    (3 6 25 22)
		    
		    //down
		    (38 2 21 51) 
		    (41 38 51 54) 
		);
    }

    top
    {
		type symmetryPlane;
		faces
		(
		    (7 8 27 26)
		    (6 7 26 25)
		    (8 18 37 27)
		    (18 17 36 37)
		);
    }
      
    bottom
    {
		type symmetryPlane;
		faces
		(
		    (43 42 55 56) 
		    (42 41 54 55) 
		    (50 43 56 63) 
		    (49 50 63 62) 
		);
    }

    inlet
    {
		type patch;
		faces
		(
		    //up
		    (14 13 32 33)
		    (17 14 33 36)
		    
		    //down
		    (13 46 59 32) 
		    (46 49 62 59) 
    	);
    }

    cylinder
    {
		type wall;
		faces
		(
		    //up
		    (10 5 24 29)
		    (5 0 19 24)
		    (16 10 29 35)
		    (11 16 35 30)
		    
		    //down
		    (40 45 58 53) 
		    (0 40 53 19)  
		    (45 48 61 58) 
		    (48 11 30 61) 
    	);
    }

	back 
    {
		type empty;
		faces
		(
			//up
		    (5 10 9 4)
		    (0 5 4 1)
		    (1 4 3 2)
		    (4 7 6 3)
		    (9 8 7 4)
		    (16 15 9 10)
		    (11 12 15 16)
		    (12 13 14 15)
		    (14 17 18 15)
		    (15 18 8 9)

		    //down
		    (45 40 39 44)
		    (40 0 1 39)
		    (1 2 38 39)
		    (39 38 41 42)
		    (44 39 42 43)
		    (48 45 44 47)
		    (11 48 47 12)
		    (13 12 47 46)
		    (46 47 50 49)
		    (47 44 43 50)
    	);
    }

	front
    {
		type empty;
		faces
		(
			//up
		    (24 23 28 29)
		    (20 23 24 19)
		    (21 22 23 20)
		    (22 25 26 23)
		    (26 27 28 23)
		    (28 34 35 29)
		    (34 31 30 35)
		    (33 32 31 34)
		    (36 33 34 37)
		    (37 34 28 27)
	 
		    //down
		    (53 58 57 52)
		    (19 53 52 20)
		    (21 20 52 51)
		    (51 52 55 54)
		    (52 57 56 55)
		    (58 61 60 57)
		    (61 30 31 60)
		    (31 32 59 60)
		    (60 59 62 63)
		    (57 60 63 56)
    	);
    }
     
);

mergePatchPairs
(
);

// ************************************************************************* //
